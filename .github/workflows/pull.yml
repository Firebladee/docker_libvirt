---
name: Pull

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fireblade/libvirt

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install yamllint
        run: pip install yamllint
      - name: Lint yaml files
        run: yamllint .

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build and scan image
        uses: ISID/build-and-scan-image@main
        with:
          tag: "libvirt"
          path: "."
          dockle-severity: FATAL
          trivy-severity: CRITICAL

  Rubocop:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # If running on a self-hosted runner, check it meets the requirements
    # listed at https://github.com/ruby/setup-ruby#using-self-hosted-runners
    - name: Set up Ruby
      uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
      with:
        ruby-version: 3.0

    # This step is not necessary if you add the gem to your Gemfile
    - name: Install Code Scanning integration
      run: bundle add code-scanning-rubocop --version 0.3.0 --skip-install

    - name: Install dependencies
      run: bundle install

    - name: Rubocop run
      run: |
        bash -c "
          bundle exec rubocop --require code_scanning --format CodeScanning::SarifFormatter -o rubocop.sarif
          [[ $? -ne 2 ]]
        "

    - name: Upload Sarif output
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: rubocop.sarif

  rspec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3
          bundler-cache: true
      - run: bundle exec rake
      
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Shellcheck
        uses: ludeeus/action-shellcheck@master

#  build-test:

#  testinfra:

#  docker-build:
